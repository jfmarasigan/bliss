AWSTemplateFormatVersion: 2010-09-09
Description: IAM roles (and policies) creation for E-Products

# Creates policies and roles used by E-Products lambda functions

# Policies:
# - basic lambda invocation (trigger lambda functions)
# - s3 get, put, and delete policy
# - get parameters from AWS Systems Manager - Parameter Store

# Roles:
# - basic lambda execution role (AWS lambda basic execution policy)
# - VPC and Parameter Store Access (AWSLambdaVPCAccessExecutionRole + get parameter/s permission)
# - VPC, S3, and Parameter Store Access (see "VPC and Parameter Store Access" + get, put, delete object in S3)

Parameters:
  CompanyNameParam:
    Type: String
    Description: Full/abbreviated name of company using this E-Products instance

Resources:
  BasicLambdaInvocationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: BasicLambdaInvocationPolicy
      Description: Allows basic invocation of lambda functions
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
              - "lambda:InvokeAsync"
            Resource: "*"

  BasicParameterStoreRetrievalPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: BasicParameterStoreRetrievalPolicy
      Description: Allows retrieval of parameters set in AWS Systems Manager - Parameter Store
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ssm:GetParameters"
              - "ssm:GetParameter"
            Resource: "*"

  BasicS3OperationsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: BasicS3OperationsPolicy
      Description: Allows basic operations on AWS S3 (Get, Put, Delete)
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:DeleteObject"
            Resource: "*"

  LambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BlissLambdaBasicExecutionRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  LambdaVPCAndParamStoreAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BlissLambdaVPCAndParamStoreAccessRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        - Ref: BasicLambdaInvocationPolicy
        - Ref: BasicParameterStoreRetrievalPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  LambdaVPCS3AndParamStoreAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BlissLambdaVPCS3AndParamStoreAccessRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        - Ref: BasicLambdaInvocationPolicy
        - Ref: BasicParameterStoreRetrievalPolicy
        - Ref: BasicS3OperationsPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"

Outputs:
  LambdaBasicExecutionRole:
    Description: Information about the value
    Value:
      Fn::GetAtt: [LambdaBasicExecutionRole, Arn]
    Export:
      Name:
        Fn::Sub:
          - ${CompanyName}-basic-ex-role-ARN
          - { CompanyName: !Ref CompanyNameParam }
  LambdaVPCAndParamStoreAccessRole:
    Description: Information about the value
    Value:
      Fn::GetAtt: [LambdaVPCAndParamStoreAccessRole, Arn]
    Export:
      Name:
        Fn::Sub:
          - ${CompanyName}-vpc-param-store-ARN
          - { CompanyName: !Ref CompanyNameParam }
  LambdaVPCS3AndParamStoreAccessRole:
    Description: Information about the value
    Value:
      Fn::GetAtt: [LambdaVPCS3AndParamStoreAccessRole, Arn]
    Export:
      Name:
        Fn::Sub:
          - ${CompanyName}-vpc-s3-param-store-ARN
          - { CompanyName: !Ref CompanyNameParam }
