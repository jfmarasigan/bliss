version: 0.2

# buildspec for initial resources
# - [s3 bucket] stack repository
# - [SSM] constant parameters

# environment variable/s used (code build environment variables)
# SSM_STACK_NAME
#  - name of the SSM parameters cloudformation stack (unique within the region)
#  - bliss-<company-name>-ssm-stack
# IAM_STACK_NAME
#  - name of the IAM parameters cloudformation stack (unique within the region)
#  - bliss-<company-name>-iam-stack
# STACK_BUCKET - name of s3 bucket used as cloudformation stack repo
# REPORT_BUCKET - name of s3 bucket used as reports binary container
# CompanyNameParam - Full/abbreviated name of company using this E-Products instance
# DatabaseHostParam - host of database for this E-Products instance
# DatabasePortParam - port of database for this E-Products instance
# DATABASE_USER - username for the database for this E-Products instance
# DATABASE_PASSWORD - password for the database for this E-Products instance

phases:
  install:
    runtime-versions:
      nodejs: 8
    commands:
      -
  pre_build:
    commands:
      -
  build:
    commands:
      - echo Deployment started on `date`
      # create stack repository
      - aws cloudformation deploy --template-file common-buckets.yaml --stack-name $S3_STACK_NAME --parameter-overrides CompanyNameParam=$CompanyNameParam StackRepoBucketNameParam=$STACK_BUCKET ReportsBucketNameParam=$REPORT_BUCKET
      # create SSM parameters
      - aws cloudformation deploy --template-file parameter-store.yaml --stack-name $SSM_STACK_NAME --parameter-overrides CompanyNameParam=$CompanyNameParam DatabaseHostParam=$DatabaseHostParam DatabasePortParam=$DatabasePortParam
      # add SSM parameter for database user
      - aws ssm put-parameter --name "/bliss/${CompanyNameParam}/db/user" --value $DATABASE_USER --type "SecureString" --tier "Standard" --description "MySQL database username for this E-Products instance"
      # add SSM parameter for database password
      - aws ssm put-parameter --name "/bliss/${CompanyNameParam}/db/password" --value $DATABASE_PASSWORD --type "SecureString" --tier "Standard" --description "MySQL database password for this E-Products instance"
      # create IAM policies and roles for lambda functions
      - aws cloudformation deploy --template-file iam-roles.yaml --stack-name $IAM_STACK_NAME --parameter-overrides CompanyNameParam=$CompanyNameParam --capabilities CAPABILITY_NAMED_IAM
      # create VPC here
      - aws cloudformation deploy --template-file vpc.yaml --stack-name $VPC_STACK_NAME --parameter-overrides EnvironmentName=$VPC_STACK_NAME
      # [A] deploy lambda function that sets origin response for AWS CloudFront distributions
      # create cloudfront deployment
      # use env variables in code build to set domain
      # set origin response trigger using ARN of lambda function (see [A])
  post_build:
    commands:
      - echo Deployment done on `date`.
